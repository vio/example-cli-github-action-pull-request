name: Stats

on:
  workflow_run:
    workflows: ["Pull Request"]
    types:
      - completed

jobs:
  send-stats:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    if: >
      ${{ github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.conclusion == 'success' }}

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - uses: hmarr/debug-action@v2

      - run: npm ci

      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });

            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "artifacts"
            })[0];

            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });

            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/artifacts.zip', Buffer.from(download.data));

      - run: unzip artifacts.zip -n

      - name: Send stats to relative-ci.com
        run: npx relative-ci-agent
        env:
          RELATIVE_CI_KEY: ${{ secrets.RELATIVE_CI_KEY }}
          DEBUG: ${{ secrets.DEBUG }}

